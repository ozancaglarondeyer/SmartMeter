// <auto-generated />
using System;
using MeterApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MeterApi.Migrations
{
    [DbContext(typeof(MeterDbContext))]
    [Migration("20240605101426_mig1")]
    partial class mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MeterApi.Models.Entities.Meter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Meters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("65f8db9c-edf2-499e-909a-078da6089e00"),
                            SerialNumber = "Meter123456"
                        },
                        new
                        {
                            Id = new Guid("331a1e6f-3791-4c1c-a84c-abffc7312f8e"),
                            SerialNumber = "Meter654321"
                        },
                        new
                        {
                            Id = new Guid("c7a55439-34c6-493d-a525-a72409c8e289"),
                            SerialNumber = "Meter112233"
                        });
                });

            modelBuilder.Entity("MeterApi.Models.Entities.MeterReading", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LastIndex")
                        .HasColumnType("float");

                    b.Property<Guid>("MeterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Power")
                        .HasColumnType("float");

                    b.Property<DateTime>("ReadingTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("Voltage")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MeterId");

                    b.ToTable("MeterReadings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("161abf92-688a-4fef-9569-ede53741906e"),
                            LastIndex = 1000.1,
                            MeterId = new Guid("65f8db9c-edf2-499e-909a-078da6089e00"),
                            Power = 123.45,
                            ReadingTime = new DateTime(2024, 5, 26, 14, 14, 25, 840, DateTimeKind.Local).AddTicks(1536),
                            Voltage = 220.5
                        },
                        new
                        {
                            Id = new Guid("c911a9c8-d1b6-473c-8aae-f15fa0b61b71"),
                            LastIndex = 1050.2,
                            MeterId = new Guid("331a1e6f-3791-4c1c-a84c-abffc7312f8e"),
                            Power = 150.66999999999999,
                            ReadingTime = new DateTime(2024, 5, 31, 15, 14, 25, 840, DateTimeKind.Local).AddTicks(1558),
                            Voltage = 230.0
                        },
                        new
                        {
                            Id = new Guid("ef473ca7-0bd7-48a3-a57c-1bb1d92f6700"),
                            LastIndex = 1100.3,
                            MeterId = new Guid("c7a55439-34c6-493d-a525-a72409c8e289"),
                            Power = 175.88999999999999,
                            ReadingTime = new DateTime(2024, 6, 3, 16, 14, 25, 840, DateTimeKind.Local).AddTicks(1562),
                            Voltage = 240.69999999999999
                        });
                });

            modelBuilder.Entity("MeterApi.Models.Entities.MeterReading", b =>
                {
                    b.HasOne("MeterApi.Models.Entities.Meter", "Meter")
                        .WithMany("MeterReadings")
                        .HasForeignKey("MeterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meter");
                });

            modelBuilder.Entity("MeterApi.Models.Entities.Meter", b =>
                {
                    b.Navigation("MeterReadings");
                });
#pragma warning restore 612, 618
        }
    }
}
